#!/usr/bin/env bash

env=$2
inventory=$3

export ENVIRONMENT=${env}
export INVENTORY_LIMIT=${inventory}

export REGION=eu-central-1
export INSTANCE_TYPE=t2.micro
export SOURCE_AMI=ami-9cee02f3
export SSH_USERNAME=ubuntu

export GIT_REPO=git@github.com:stphivos/django-angular2-fullstack-compact.git
export GIT_BRANCH=dev

export SERVER_ROOT_NAME=webapps
export APPLICATION_NAME=fullstack
export PROJECT_NAME=backend
export SERVER_ROOT_PATH=/${SERVER_ROOT_NAME}
export VIRTUALENV_PATH=${SERVER_ROOT_PATH}/${APPLICATION_NAME}/virtualenv
export PROJECT_PATH=${VIRTUALENV_PATH}/../${PROJECT_NAME}

setup() {
    vagrant halt && vagrant destroy -f && vagrant up
}

build() {
    if [ "$#" -ne 2 ]
    then
      echo "'build' command requires 'env' and 'inventory' arguments."
      exit 1
    fi
    vars=$(pwd)"/provisioning/terraform/terraform.tfvars"
    cd provisioning/packer

    echo "Packer building..."
    packer build pack.json | \
    tee /dev/tty | \
    grep -E -o '\w{2}-\w+-\d{1}: ami-\w+' | \
    perl -ne '@parts = split /[:,\s]+/, $_; print "aws_amis." . $parts[0] ." = \"" . $parts[1] . "\"\n"' > ${vars}
    cd ../../
}

deploy() {
    echo "Terraform applying..."
    cd provisioning/terraform
    terraform apply
    cd ../../
}

# call arguments verbatim:
$@
